
import java.util.*;
class Main {
    public static void main(String[] args)throws Exepti {
      
        String s="//;--\n-1;-2\n3,4\n5";
        try
        {
       System.out.println(add(s));
      System.out.println(add("//[*]\n1*2*3\n4,5,-6\n7,-8"));
       
         }
    catch(Exception  e)
    {
        System.out.println(e.getMessage());
    }
    }
        
        public static int add(String s)throws Exepti
        {
              int i=0,j=0,val=0,s1=0,val1=0,k=0;
              if(s==null)
              return 0;
        
        List<Integer>  nega=new ArrayList<>();
        for(i=0;i<s.length();i++)
        {
            val=0;
            val1=0;
            if(s.charAt(i)>='0'&&s.charAt(i)<='9')
            {
                val=s.charAt(i)-'0';
                for(j=i+1;j<s.length();j++)
                {
                    if(s.charAt(j)>='0'&&s.charAt(j)<='9')
                {
                    val=val*10+s.charAt(j)-'0';
                }
                else
                {
                    break;
                }
                }
                
             i=j;   
            }
            
            
             else if(s.charAt(i)=='-')
             {
                  for(k=i+1;k<s.length();k++)
                {
                    if(s.charAt(k)>='0'&&s.charAt(k)<='9')
                {
                    val1=val1*10+s.charAt(k)-'0';
                }
                else
                {
                    break;
                }
                }
                i=k;
                if(val1!=0)
                {
                val1=-1*val1;
                nega.add(val1);
                }
                 
             }
            s1=s1+val;
        }
    String s2="";
    if(nega.size()>=1)
    {
        if(nega.size()==1)
        {
           throw new Exepti("negative numbers not allowed "+nega.get(0));
        }
        else
        {
            for(i=0;i<nega.size();i++)
            {
                if(nega.size()-1==i)
                {
                    s2=s2+nega.get(i);
                    break;
                }
                s2=s2+nega.get(i)+",";
            }
             throw new Exepti(s2);
        }
    }
    
    else
    return s1;
    } 

static class Exepti extends Exception
{
    public Exepti(String msg)
    {
        super(msg);
    }
}
}


